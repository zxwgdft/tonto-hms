<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tonto.hms.dao.CustomerDao" >
  <resultMap id="BaseResultMap" type="com.tonto.hms.model.Customer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_name, phone, cellphone, address, user_id
  </sql>
  <select id="searchAll" resultMap="BaseResultMap" parameterType="com.tonto.hms.model.Customer">
		select<include refid="Base_Column_List" />from customer WHERE 1=1
		<if test="customerName != null">AND customer_name LIKE #{customerName}</if>		
		<if test="phone != null">AND phone LIKE #{phone}</if>
		<if test="cellphone != null">AND cellphone LIKE #{cellphone}</if>	
		<if test="address != null">AND address LIKE #{address}</if>		
		<if test="userId!= null">AND user_id =#{userId}</if>	
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tonto.hms.model.Customer" >
  <selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
    insert into customer (customer_name, phone, 
      cellphone, address, user_id
      )
    values (#{customerName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{cellphone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tonto.hms.model.Customer" >
  <selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null" >
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tonto.hms.model.Customer" >
    update customer
    <set >
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tonto.hms.model.Customer" >
    update customer
    set customer_name = #{customerName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>